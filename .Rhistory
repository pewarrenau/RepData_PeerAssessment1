}
}
for(i in 1:n) {
if(is.na(tidyData[i,1])) {
subsetTidyData <- subset(tidyData, interval == tidyData[i,3])
subsetTidyStepData <- na.omit(subsetTidyData$steps)
tidyData[i,1] <- round(mean(subsetTidyStepData))
}
}
aggTidyData <- aggregate(steps ~ date, data=tidyData, sum)
hist(aggTidyData$steps, breaks = 25, xlab = "Steps", main = "Histogram of Steps")
aggTidyDataMean <- mean(aggTidyData$steps)
aggTidyDataMedian <-median(aggTidyData$steps)
print(paste("The mean is", round(aggTidyDataMean, 2)))
print(paste("The medium is", aggTidyDataMedian))
hist(aggTidyData$steps, breaks = 25, xlab = "Steps", main = "An overly of both Histograms", col="blue", ylim = c(0, 20))
par(new = TRUE)
hist(aggdata$steps, breaks = 25, xlab = "Steps", main = "", border="red", ylim = c(0, 20))
library(ggplot2)
help(ggplot2)
qplot(tidyData)
qplot(steps, date, data=tidyData)
qplot(date, steps, data=tidyData)
qplot(date, steps, data=tidyData, geom="line")
qplot(date, steps, data=tidyData, geom="smooth")
qplot(date, steps, data=tidyData, geom="density")
qplot(date, steps, data=tidyData, geom=c("line", "smooth"))
qplot(date, steps, data=tidyData, geom="line")
qplot(steps, data=tidyData, geom="line")
qplot(steps, data=tidyData)
qplot(date, steps, data=tidyData, geom="line")
p <-qplot(date, steps, data=tidyData, geom="line")
qplot(date, steps, data=tidyData, geom=c("line","smooth"))
qplot(date, steps, data=tidyData, geom=c("density","smooth"))
qplot(steps, data=tidyData, geom=c("density","smooth"))
qplot(date, steps, data=tidyData, geom=c("density","smooth"))
qplot(date, steps, data=tidyData, color=interval)
qplot(interval, steps, data=tidyData, color=interval)
qplot(interval, steps, data=tidyData)
hist(aggTidyData$steps, breaks = 25, xlab = "Steps", main = "An overly of both Histograms", col="blue", ylim = c(0, 20))
par(new = TRUE)
hist(aggdata$steps, breaks = 25, xlab = "Steps", main = "", border="red", ylim = c(0, 20))
demo(colors)
hist(aggTidyData$steps, breaks = 25, xlab = "Steps", main = "An overly of both Histograms", col="deepskyblue", ylim = c(0, 20))
par(new = TRUE)
hist(aggdata$steps, breaks = 25, xlab = "Steps", main = "", border="red", ylim = c(0, 20))
demo(colors)
hist(aggdata$steps, breaks = 25, xlab = "Steps", main = "", border="brown2", ylim = c(0, 20))
hist(aggTidyData$steps, breaks = 25, xlab = "Steps", main = "An overly of both Histograms", col="deepskyblue", ylim = c(0, 20))
par(new = TRUE)
hist(aggdata$steps, breaks = 25, xlab = "Steps", main = "", border="brown2", ylim = c(0, 20))
```
hist(aggTidyData$steps, breaks = 25, xlab = "Steps", main = "An overly of both Histograms", col="deepskyblue", ylim = c(0, 20))
par(new = TRUE)
hist(aggdata$steps, breaks = 25, xlab = "Steps", main = "", ylim = c(0, 20))
hist(aggdata$steps, breaks = 25, xlab = "Steps", main = "", col="deepskyblue2", ylim = c(0, 20))
hist(aggTidyData$steps, breaks = 25, xlab = "Steps", main = "An overly of both Histograms", col="deepskyblue", ylim = c(0, 20))
par(new = TRUE)
hist(aggdata$steps, breaks = 25, xlab = "Steps", main = "", col="deepskyblue2", ylim = c(0, 20))
demo(colors)
demo(colors)
hist(aggdata$steps, breaks = 25, xlab = "Steps", main = "", col="royalblue", ylim = c(0, 20))
hist(aggTidyData$steps, breaks = 25, xlab = "Steps", main = "An overly of both Histograms", col="deepskyblue", ylim = c(0, 20))
par(new = TRUE)
hist(aggdata$steps, breaks = 25, xlab = "Steps", main = "", col="royalblue", ylim = c(0, 20))
x<-weekdays(tidyData$date)
x<-tidyData$date
x
x[1]
class(x[1])\
class(x[1])
d<-date()
d
class(d)
weekdays(d)
demo(weekdays)
example(weekdays)
as.Date(d)
as.Date.date
as.Date.date()
as.Date(date())
as.Date(d)
format.Date(d)
as.Date(d, "%d/%m/%y")
d
tidyData[1,1]
tidyData[1,2]
as.Date(tidyData[1,2])
d<-as.Date(tidyData[1,2])
weekdays(d)
tidyData$date <- as.Date(tidyData$date)
stepData <- read.csv("activity.csv")
stepData <- as.Date(stepData$date)
stepData <- read.csv("activity.csv")
stepData$date <- as.Date(stepData$date)
weekdays(d)
weekdays(stepData$date[1])
d<- weekdays(stepData$date[1])
class(d)
d<- weekdays(stepData$date)
d
tidyData <- stepData
n <- nrow(tidyData)
for(i in 1:n) {
if(is.na(tidyData[i,1])) {
subsetTidyData <- subset(tidyData, interval == tidyData[i,3])
subsetTidyStepData <- na.omit(subsetTidyData$steps)
tidyData[i,1] <- round(mean(subsetTidyStepData))
}
}
weekdays(tidyData$date)
cbind(tidyData, weekdays(tidyData$date)
)
tidyData <- cbind(tidyData, weekdays(tidyData$date))
names(tidyData)
names(tidyData[4])
names(tidyData[4]) <- "weekdays"
names(tidyData)
names(tidyData[4]) <- "weekdays"
names(tidyData)
dimnames(tidyData)
dimnames(tidyData[4])
dayOfWeek <- weekdays(tidyData$date)
tidyData <- cbind(tidyData, dayOfWeek)
names(tidyData[4]) <- "dayOfWeeksss"
dayOfWeek <- weekdays(tidyData$date)
tidyData <- cbind(tidyData, dayOfWeeks)
tidyData <- stepData
n <- nrow(tidyData)
for(i in 1:n) {
if(is.na(tidyData[i,1])) {
subsetTidyData <- subset(tidyData, interval == tidyData[i,3])
subsetTidyStepData <- na.omit(subsetTidyData$steps)
tidyData[i,1] <- round(mean(subsetTidyStepData))
}
}
aggTidyData <- aggregate(steps ~ date, data=tidyData, sum)
hist(aggTidyData$steps, breaks = 25, xlab = "Steps", main = "Histogram of Steps")
aggTidyDataMean <- mean(aggTidyData$steps)
aggTidyDataMedian <-median(aggTidyData$steps)
print(paste("The mean is", round(aggTidyDataMean, 2)))
print(paste("The medium is", aggTidyDataMedian))
```
hist(aggTidyData$steps, breaks = 25, xlab = "Steps", main = "Overly of both Histograms", col="deepskyblue", ylim = c(0, 20))
par(new = TRUE)
hist(aggdata$steps, breaks = 25, xlab = "Steps", main = "", col="royalblue", ylim = c(0, 20))
dayOfWeek <- weekdays(tidyData$date)
tidyData <- cbind(tidyData, dayOfWeeks)
tidyData <- cbind(tidyData, dayOfWeek)
if(tidyData$dayOfWeek[1] == c("Saturday", "Sunday")) print("yes")
if(tidyData$dayOfWeek[1] == "Saturday" | "Sunday") print("yes")
dayOfWeek <- weekdays(tidyData$date)
tidyData <- cbind(tidyData, dayOfWeek)
for(i in 1:n) {
tidyData <- stepData
n <- nrow(tidyData)
for(i in 1:n) {
if(is.na(tidyData[i,1])) {
subsetTidyData <- subset(tidyData, interval == tidyData[i,3])
subsetTidyStepData <- na.omit(subsetTidyData$steps)
tidyData[i,1] <- round(mean(subsetTidyStepData))
}
}
}
stepData <- read.csv("activity.csv")
stepData$date <- as.Date(stepData$date)
```
## What is mean total number of steps taken per day?
1. Aggregate the steps by date, using sum as the function. Plotted a Histogram of aggregate step data.
```{r echo = TRUE}
aggdata <- aggregate(steps ~ date, data=stepData, sum)
hist(aggdata$steps, breaks = 25, xlab = "Steps", main = "Histogram of Steps")
stepData <- read.csv("activity.csv")
stepData$date <- as.Date(stepData$date)
aggdata <- aggregate(steps ~ date, data=stepData, sum)
hist(aggdata$steps, breaks = 25, xlab = "Steps", main = "Histogram of Steps")
aggdataMean <- mean(aggdata$steps)
aggdataMedian <-median(aggdata$steps)
print(paste("The mean is", round(aggdataMean, 2)))
print(paste("The medium is", aggdataMedian))
aggdata2 <- aggregate(steps ~ interval, data=stepData, mean)
plot(aggdata2, type = "l", main = "Line Plot of Steps versus 5-Minute Interval Times")
aggdata2 <- aggregate(steps ~ interval, data=stepData, mean)
plot(aggdata2, type = "l", main = "Line Plot of Steps versus 5-Minute Interval Times")
orderAggData2 <- order(aggdata2$steps, decreasing = TRUE)
maxAggData2 <- aggdata2[orderAggData2[1],]
print(paste("The maximum 5-minute interval average across all days is", row.names(maxAggData2)))
sumNaDateData <- sum(is.na(stepData$date))
sumNaIntervalData <- sum(is.na(stepData$interval))
sumNaStepData <- sum(is.na(stepData$steps))
if(sumNaDateData != 0) {
print(paste("The total number of rows with missing date data is", sumNaDateData))
}
if(sumNaIntervalData != 0) {
print(paste("The total number of rows with missing interval data is", sumNaIntervalData))
}
if(sumNaStepData != 0) {
print(paste("The total number of rows with missing step data is", sumNaStepData))
}
tidyData <- stepData
n <- nrow(tidyData)
for(i in 1:n) {
if(is.na(tidyData[i,1])) {
subsetTidyData <- subset(tidyData, interval == tidyData[i,3])
subsetTidyStepData <- na.omit(subsetTidyData$steps)
tidyData[i,1] <- round(mean(subsetTidyStepData))
}
}
aggTidyData <- aggregate(steps ~ date, data=tidyData, sum)
hist(aggTidyData$steps, breaks = 25, xlab = "Steps", main = "Histogram of Steps")
aggTidyDataMean <- mean(aggTidyData$steps)
aggTidyDataMedian <-median(aggTidyData$steps)
print(paste("The mean is", round(aggTidyDataMean, 2)))
print(paste("The medium is", aggTidyDataMedian))
hist(aggTidyData$steps, breaks = 25, xlab = "Steps", main = "Overly of both Histograms", col="deepskyblue", ylim = c(0, 20))
par(new = TRUE)
hist(aggdata$steps, breaks = 25, xlab = "Steps", main = "", col="royalblue", ylim = c(0, 20))
dayOfWeek <- weekdays(tidyData$date)
tidyData <- cbind(tidyData, dayOfWeek)
for(i in 1:n) {
if(tidyData[i,4] == "Saturday") {
tidyData[i,5] <- "weekend"
}
if(tidyData[i,4] == "Sunday") {
tidyData[i,5] <- "weekend"
}
else {
tidyData[i,5] <- "weekday"
}
}
table(tidyData$V5)
names(tidyData[5])
names(tidyData[5]) <- "bob"
for(i in 1:n) {
if(tidyData[i,4] == "Saturday") {
bob[i,5] <- "weekend"
}
if(tidyData[i,4] == "Sunday") {
bob[i,5] <- "weekend"
}
else {
bob[i,5] <- "weekday"
}
}
for(i in 1:n) {
if(tidyData[i,4] == "Saturday") {
bob[i] <- "weekend"
}
if(tidyData[i,4] == "Sunday") {
bob[i] <- "weekend"
}
else {
bob[i] <- "weekday"
}
}
as.factor(tidyData$V5)
workDay <- as.factor()
colnames(tidyData)
colnames(tidyData[5])
colnames(tidyData[5]) <- "bob"
colnames(tidyData[5])
tidyData[5] <- colnames<-"bob"
cbind(tidyData, "bob")
tidyData<-cbind(tidyData, "bob")
tidyData <- stepData
n <- nrow(tidyData)
for(i in 1:n) {
if(is.na(tidyData[i,1])) {
subsetTidyData <- subset(tidyData, interval == tidyData[i,3])
subsetTidyStepData <- na.omit(subsetTidyData$steps)
tidyData[i,1] <- round(mean(subsetTidyStepData))
}
}
dayOfWeek <- weekdays(tidyData$date)
tidyData <- cbind(tidyData, dayOfWeek, "workDay")
for(i in 1:n) {
if(tidyData[i,4] == "Saturday") {
tidyData[i,5] <- "weekend"
}
if(tidyData[i,4] == "Sunday") {
tidyData[i,5] <- "weekend"
}
else {
tidyData[i,5] <- "weekday"
}
}
tidyData[i,5] <- "weekend"
tidyData[7,5] <- "weekend"
workDay <- character
tidyData <- cbind(tidyData, dayOfWeek, factor("workDay", levels=c("weekend", "weekday")))
factor(workDay, levels=c("weekend", "weekday"))
workDay <- factor(levels=c("weekend", "weekday"))
tidyData <- cbind(tidyData, dayOfWeek, workDay)
for(i in 1:n) {
if(tidyData[i,4] == "Saturday") {
workDay[i] <- "weekend"
}
if(tidyData[i,4] == "Sunday") {
workDay[i] <- "weekend"
}
else {
workDay[i] <- "weekday"
}
}
workDay
table(workDay)
dayOfWeek <- weekdays(tidyData$date)
workDay <- factor(levels=c("weekend", "weekday"))
for(i in 1:n) {
if(dayOfWeek[i] == "Saturday") {
workDay[i] <- "weekend"
}
if(dayOfWeek[i] == "Sunday") {
workDay[i] <- "weekend"
}
else {
workDay[i] <- "weekday"
}
}
table(workDay)
qplot(steps, intervals, data=tidyData, facets = workDays)
stepData <- read.csv("activity.csv")
stepData$date <- as.Date(stepData$date)
aggdata <- aggregate(steps ~ date, data=stepData, sum)
hist(aggdata$steps, breaks = 25, xlab = "Steps", main = "Histogram of Steps")
aggdataMean <- mean(aggdata$steps)
aggdataMedian <-median(aggdata$steps)
print(paste("The mean is", round(aggdataMean, 2)))
print(paste("The medium is", aggdataMedian))
aggdata2 <- aggregate(steps ~ interval, data=stepData, mean)
plot(aggdata2, type = "l", main = "Line Plot of Steps versus 5-Minute Interval Times")
orderAggData2 <- order(aggdata2$steps, decreasing = TRUE)
maxAggData2 <- aggdata2[orderAggData2[1],]
print(paste("The maximum 5-minute interval average across all days is", row.names(maxAggData2)))
sumNaDateData <- sum(is.na(stepData$date))
sumNaIntervalData <- sum(is.na(stepData$interval))
sumNaStepData <- sum(is.na(stepData$steps))
if(sumNaDateData != 0) {
print(paste("The total number of rows with missing date data is", sumNaDateData))
}
if(sumNaIntervalData != 0) {
print(paste("The total number of rows with missing interval data is", sumNaIntervalData))
}
if(sumNaStepData != 0) {
print(paste("The total number of rows with missing step data is", sumNaStepData))
}
tidyData <- stepData
n <- nrow(tidyData)
for(i in 1:n) {
if(is.na(tidyData[i,1])) {
subsetTidyData <- subset(tidyData, interval == tidyData[i,3])
subsetTidyStepData <- na.omit(subsetTidyData$steps)
tidyData[i,1] <- round(mean(subsetTidyStepData))
}
}
aggTidyData <- aggregate(steps ~ date, data=tidyData, sum)
hist(aggTidyData$steps, breaks = 25, xlab = "Steps", main = "Histogram of Steps")
aggTidyDataMean <- mean(aggTidyData$steps)
aggTidyDataMedian <-median(aggTidyData$steps)
print(paste("The mean is", round(aggTidyDataMean, 2)))
print(paste("The medium is", aggTidyDataMedian))
hist(aggTidyData$steps, breaks = 25, xlab = "Steps", main = "Overly of both Histograms", col="deepskyblue", ylim = c(0, 20))
par(new = TRUE)
hist(aggdata$steps, breaks = 25, xlab = "Steps", main = "", col="royalblue", ylim = c(0, 20))
dayOfWeek <- weekdays(tidyData$date)
workDay <- factor(levels=c("weekend", "weekday"))
for(i in 1:n) {
if(dayOfWeek[i] == "Saturday") {
workDay[i] <- "weekend"
}
if(dayOfWeek[i] == "Sunday") {
workDay[i] <- "weekend"
}
else {
workDay[i] <- "weekday"
}
}
tidyData <- cbind(tidyData, workDay)
qplot(steps, intervals, data=tidyData, facets = workDays)
qplot(steps, intervals, data=tidyData, facets = workDay)
qplot(steps, intervals, data=tidyData, facets = workDay~)
qplot(steps, intervals, data=tidyData,)
qplot(steps, intervals, data=tidyData)
qplot(steps, interval, data=tidyData)
qplot(interval,steps,  data=tidyData)
qplot(interval,steps,  data=tidyData, facets = workDay~)
qplot(interval,steps,  data=tidyData, facets = ~workDay)
qplot(interval,steps,  data=tidyData, facets = workDay~)
qplot(interval,steps,  data=tidyData, facets = ~workDay)
plot(aggdata2, type = "l", main = "Line Plot of Steps versus 5-Minute Interval Times")
plot(tidyData, type = "l", main = "Line Plot of Steps versus 5-Minute Interval Times")
plot(tidyData$interval, tidyData$steps, type = "l")
plot(tidyData)
plot(tidyData, type = "l")
library(lattice)
xyplot(tidyData$interval, tidyData$steps)
xyplot(tidyData$interval~tidyData$steps)
densityplot(tidyData$interval~tidyData$steps)
bwyplot(tidyData$interval~tidyData$steps)
bwplot(tidyData$interval~tidyData$steps)
example(lattice)
demo(lattice)
dotplot(tidyData$interval~tidyData$steps)
dotplot(tidyData$steps~tidyData$interval)
xyplot(steps~interval, data=tidyData)
xyplot(steps~interval, data=tidyData)
xyplot(steps~interval, data=tidyData, groups = weekdays)
xyplot(steps~interval, data=tidyData, groups = workDay)
xyplot(steps~interval, data=tidyData, type = "s")
plot(aggdata2, type = "l", main = "Line Plot of Steps versus 5-Minute Interval Times")
aggdata3 <- aggregate(steps ~ interval, data=tidyData, mean)
plot(aggdata3, type = "l", main = "Line Plot of Steps versus 5-Minute Interval Times")
weekdayData <- subset(tidyData, workDay == "weekday", select = c(steps, interval))
weekendData <- subset(tidyData, workDay == "weekend", select = c(steps, interval))
par(mfrow=c(1,2))
plot(aggdata2, type = "l", main = "Line Plot of Steps versus 5-Minute Interval Times")
plot(aggdata3, type = "l", main = "Line Plot of Steps versus 5-Minute Interval Times")
par(mfrow=c(2,1))
plot(aggdata2, type = "l", main = "Line Plot of Steps versus 5-Minute Interval Times")
plot(aggdata3, type = "l", main = "Line Plot of Steps versus 5-Minute Interval Times")
par(mfrow=c(2,1))
plot(weekdayData, type = "l", main = "Weekday")
plot(weekendData, type = "l", main = "Weekend")
weekdayData <- subset(tidyData, workDay == "weekday", select = c(interval, steps))
weekendData <- subset(tidyData, workDay == "weekend", select = c(interval, steps))
par(mfrow=c(2,1))
plot(weekdayData, type = "l", main = "Weekday")
plot(weekendData, type = "l", main = "Weekend")
aggdata3 <- aggregate(steps ~ interval, data=weekdayData, mean)
aggdata4 <- aggregate(steps ~ interval, data=weekendData, mean)
par(mfrow=c(2,1))
plot(aggdata3, type = "l", main = "Weekday")
plot(aggdata4, type = "l", main = "Weekend")
par(mfrow=c(1,2))
plot(aggdata3, type = "l", main = "Weekday")
plot(aggdata4, type = "l", main = "Weekend")
par(mfrow=c(2,1))
plot(aggdata3, type = "l", main = "Weekday")
plot(aggdata4, type = "l", main = "Weekend")
xyplot(interval~steps, data=aggdata3)
xyplot(steps~interval, data=aggdata3)
demo(xyplot)
example(xyplot)
bwplot(steps~interval, data=aggdata3)
stripplot(interval~steps, data=aggdata3)
stripplot(steps~interval, data=aggdata3)
barplot(steps~interval, data=aggdata3)
dotplot(steps~interval, data=aggdata3)
qplot(steps~interval, data=aggdata3)
qplot(steps, interval, data=aggdata3)
qplot(steps, interval, data=aggdata3, geom="path"\)
qplot(steps, interval, data=aggdata3, geom="path")
qplot(interval, steps, data=aggdata3, geom="path")
qplot(interval, steps, data=aggdata3, geom="path", facet_grid(workDay))
qplot(interval, steps, data=aggdata3, geom="path", facet_grid(workDay))
qplot(interval, steps, data=aggdata3, geom="path", facet_grid(workDay~))
qplot(interval, steps, data=aggdata3, geom="path", facet_grid(~workDay))
qplot(interval, steps, data=aggdata3, geom="path")
qplot(interval, steps, data=aggdata3, geom="path", facet_grid(.~workDay))
qplot(interval, steps, data=aggdata3, geom="path", facet_grid(workDay~.))
qplot(interval, steps, data=aggdata3, geom="path", facet_grid(workDay ~ .))
qplot(interval, steps, data=aggdata3, geom="path", facets = workDay ~ .)
qplot(interval, steps, data=aggdata3, geom="path", facets = .~workDay)
qplot(mpg, wt, data=mtcars, facets = . ~ vs + am)
qplot(mpg, wt, data=mtcars, facets = vs + am ~ . )
mtcars
weekdayData <- subset(tidyData, workDay == "weekday", select = c(interval, steps, workDay))
weekendData <- subset(tidyData, workDay == "weekend", select = c(interval, steps, workDay))
aggdata3 <- aggregate(steps ~ interval, data=weekdayData, mean)
aggdata4 <- aggregate(steps ~ interval, data=weekendData, mean)
qplot(interval, steps, data=aggdata3, geom="path", facets = . ~ workDay)
aggdata3
aggdata5 <- aggregate(steps ~ interval, data=tidyData, mean)
plot(aggdata3, type = "l", main = "Weekday")
plot(aggdata3, type = "l", main = "Weekday", xlab = "")
par(mfrow=c(2,1))
plot(aggdata3, type = "l", main = "Weekday", xlab = "")
plot(aggdata4, type = "l", main = "Weekend")
par(mfrow=c(2,1))
plot(aggdata3, type = "l", main = "Weekday", mar = C(1,1,1,1))
plot(aggdata4, type = "l", main = "Weekend", mar = C(1,1,1,1))
par(mfrow=c(2,1), mar = C(1,1,1,1))
plot(aggdata3, type = "l", main = "Weekday" )
plot(aggdata4, type = "l", main = "Weekend")
par(mfrow=c(2,1), mar = C(5,5,5,5))
example(par)
par(mfrow=c(2,1))
plot(aggdata3, type = "l", main = "Weekday" )
plot(aggdata4, type = "l", main = "Weekend")
par(mfrow=c(2,1), mai = c(1,1,1,1))
plot(aggdata3, type = "l", main = "Weekday" )
plot(aggdata4, type = "l", main = "Weekend")
par(mfrow=c(2,1), mai = c(5,5,1,1))
plot(aggdata3, type = "l", main = "Weekday" )
plot(aggdata4, type = "l", main = "Weekend")
plot(aggdata4, type = "l", main = "Weekend")
plot(aggdata4, type = "l", main = "Weekend")
par(mfrow=c(2,1), mai = c(0.5,0.5,0.5,0.51))
plot(aggdata3, type = "l", main = "Weekday" )
plot(aggdata4, type = "l", main = "Weekend")
par(mfrow=c(2,1), mai = c(0.5,1,0.5,1))
plot(aggdata3, type = "l", main = "Weekday" )
plot(aggdata4, type = "l", main = "Weekend")
par(mfrow=c(2,1), mai = c(0.5, 2, 0.5, 1))
plot(aggdata3, type = "l", main = "Weekday" )
plot(aggdata4, type = "l", main = "Weekend")
par(mfrow=c(2,1), mai = c(0.5, 1.5, 0.5, 1))
plot(aggdata3, type = "l", main = "Weekday" )
plot(aggdata4, type = "l", main = "Weekend")
par(mfrow=c(2,1), mai = c(0.75, 1.5, 0.5, 1.5))
plot(aggdata3, type = "l", main = "Weekday" )
plot(aggdata4, type = "l", main = "Weekend")
